{"pages":[],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2020/01/30/hello-world/"},{"title":"编程语言类型详解","text":"最近在看《深入理解C#》的时候，其中提到了动态语言的概念，让我一头雾水。 在搜索查证的过程中，又冒出一些个编程语言类型的概念，有些难以理解与区分，故以此篇文章记录。 编译型语言和解释型语言计算机不能直接理解高级语言，需要将高级语言翻译成机器语言后计算机才能执行。翻译的方法有两种：一个是编译、一个是解释。 编译型语言需通过编译器将源代码编译成机器码后，才能执行的语言。一般需要经过编译、链接两个步骤。(编译：将源代码编译成机器码。链接：将各个模块的机器码和依赖库连接起来生成可执行文件。) 优点：1.编译器一般会有预编译过程对代码进行优化。2.因为编译只需要在程序运行前执行一次，所以程序的执行效率高。3.可以脱离语言环境独立运行 缺点：1.修改代码后需要将整个模块重新编译2.编译是根据所处平台生成对应的机器码，所以需要根据运行时所处的操作系统生成可执行文件。跨平台性差。 代表语言：C、C++、Object-C、Swift等 解释型语言解释型语言不需要编译，在运行时逐行解释 优点：1.具有良好的跨平台性，在任何环境中都能运行(前提：安装了虚拟机)2.修改方便，修改完成后可直接运行，不需要停机维护。 缺点：1.每次运行都需要逐行解释，性能上不及编译型语言 代表语言：JavaScript、Python、PHP等 混合型语言既然编译型和解释型各有缺点就会有人想到把两种类型整合起来，取其精华去其糟粕。就出现了半编译型语言。比如C#,C#在编译的时候不是直接编译成机器码而是中间码，.NET平台提供了中间语言运行库运行中间码，中间语言运行库类似于Java虚拟机。.net在编译成IL代码后，保存在dll中，首次运行时由JIT在编译成机器码缓存在内存中，下次直接执行。 动态语言和静态语言主要区别：运行时能否改变代码结构 动态语言是一类在运行时可以改变其结构的语言：例如新的函数、对象、甚至代码可以被引进，已有的函数可以被删除或是其他结构上的变化。通俗点说就是在运行时代码可以根据某些条件改变自身结构。 我对动态语言的使用不多，对于“在运行时可以改变其结构”理解较浅。以Python动态添加属性为例： 123456789class Obj(object): def __init__(self): self.name = '张亚飞'obj = Obj();obj.age = 23;print(obj.age);obj2 = Obj();print(obj.age); 上述代码为Obj类的实例obj动态添加了属性age，而另一个实例obj2中并没有age属性 代表语言：Object-C、JavaScript、PHP、Python、Erlang等 静态语言与动态语言相对应的，运行时结构不可变的语言就是静态语言 代表语言：Java、C++、C等 动态类型语言和静态类型语言主要区别：检查数据类型的时机 动态类型语言动态类型语言指的是在运行时检查数据类型的语言。变量在使用前不需要声明类型，其类型由赋值的数据的类型决定。 代表语言：JavaScript、Python、PHP等 静态语言类型静态类型语言指的是在编译时就确定变量数据类型的语言。 代表语言：C、C++、C#、Java、Object-C等 强类型语言和弱类型语言强类型语言强类型语言中一旦一个变量被指定了数据类型，如果不进行强制类型转换，那么它就永远是这个数据类型。 代表语言：Java、Python、C#等 弱类型语言数据类型可以被忽略，一个变量可以赋不同数据类型的值。比如给一个整型变量赋值字符，那这就是个字符变量。 代表语言：C、C++、JavaScript、PHP等 最后，附上一张图片以供理解","link":"/2020/01/31/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E7%B1%BB%E5%9E%8B%E8%AF%A6%E8%A7%A3/"}],"tags":[{"name":"-Programming","slug":"Programming","link":"/tags/Programming/"}],"categories":[]}